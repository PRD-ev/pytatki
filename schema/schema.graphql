# Query
type Query {
  user(id: ID!): User!
  group(id: ID!): Group!
  folder(id: ID!): Folder!
} 

type Mutation {
  createGroup(name: String!): Group!
  deleteGroup(id: ID!): Group!
  createNote(name: String!): Note!
  deleteNote(id: ID!): Note!
  createFolder(name: String!): Folder!
  deleteFolder(id: ID!): Folder!
}

# Types
type User {
  id: ID!
  name: String!
  image: String
  notes: [Note!]
  groups: [Group!]
}

type Note {
  id: ID!
  type: NoteType!
  title: String!
  author: User!
  parentFolder: Folder
}

type Folder {
  id: ID!
  title: String!
  author: User!
  parentFolder: Folder
}

type Group {
  id: ID!
  name: String!
  members: [User!]
  image: String
  folders: [Folder!]
  notes: [Note!]
}

# Scalars
enum NoteType {
  DOWNLOAD
  PYTATKI
  EXTERNAL
}